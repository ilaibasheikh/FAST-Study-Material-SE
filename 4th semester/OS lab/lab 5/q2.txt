//ordinary pipe reading from terminal
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <string.h>
#define BUFFER_SIZE 25
#define READ_END 0
#define WRITE_END 1
int main(void){
	char write_msg[BUFFER_SIZE] ;
	char read_msg[BUFFER_SIZE];
	int fd[2];
	pid_t pid;
	if(pipe(fd) == -1){ //0: correct -1: error
		fprintf(stderr,"Pipe failed");
		return 1;
	}
	printf("Enter a message:\n");
	fgets(write_msg, BUFFER_SIZE ,stdin);
	
	pid = fork();
	if(pid<0){
		fprintf(stderr, "Fork failed");
		return 1;
	}
	if (pid>0){ //parent
		close(fd[READ_END]);
		write(fd[WRITE_END], write_msg, strlen(write_msg) +1);
		close(fd[WRITE_END]);
	}
	else{ //child
		close(fd[WRITE_END]);
		read(fd[READ_END], read_msg, BUFFER_SIZE);
		printf("read %s\n", read_msg);
		close(fd[READ_END]);
	}
	return 0;
}