import java.util.ArrayList;
import java.util.List;

public class StringPermutations {
    
    public static int count_bt=0;
    
    public static void main(String[] args) {
        String input = "ABC";
        List<String> permutations = generatePermutations(input);
        
        for (String perm : permutations) {
            System.out.println(perm);
        }
    }
    
    public static List<String> generatePermutations(String input) {
        List<String> result = new ArrayList<>();
        char[] chars = input.toCharArray();
        
        backtrack(result, chars, 0, input.length() - 1);
        return result;
    }
    
    private static void backtrack(List<String> result, char[] chars, int start, int end) {
        
        System.out.println("-----Backtrack count: "+ count_bt);
        count_bt++;
        System.out.println("start:"+start+" end:"+end);
        if (start == end) {
            
            result.add(new String(chars));
            System.out.println("Added to solution:"+(chars[0])+(chars[1])+(chars[2]));
            System.out.println();
        } else {
            for (int i = start; i <= end; i++) {
                swap(chars, start, i);
                System.out.println("Calling BackTrack with start="+ (start + 1)+ " end="+ end);
                backtrack(result, chars, start + 1, end);
                System.out.println("After backtracking");
                System.out.println("-Calling Swap with i="+start+" i="+i);
                swap(chars, start, i); // Backtrack by restoring the original order
            }
        }
    }
    
    private static void swap(char[] chars, int i, int j) {
      //  System.out.println("1: "+ "char[i]="+chars[i]+ " char[j]="+chars[j]);
        System.out.println("In Swap: "+ "[i]="+i+ " [j]="+j);
        System.out.print("Before Swap: "+ "char[i]="+chars[i]+ " char[j]="+chars[j]);
        char temp = chars[i];
        chars[i] = chars[j];
        chars[j] = temp;
        System.out.println("      After Swap: "+ "char[i]="+chars[i]+ " char[j]="+chars[j]);
    }
}
